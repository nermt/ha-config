button_card_templates: !include button_card_templates.yaml

views:
  - type: custom:grid-layout
    path: 0
    layout:
      #default
      margin: 0
      grid-gap: var(--custom-layout-card-padding)
      grid-template-columns: repeat(4, 1fr) 0
      grid-template-rows: 0 repeat(2, fit-content(100%)) 0fr
      grid-template-areas: |
        "sidebar  .           .       .       ."
        "sidebar  lampor      ute     sovrum  ."
        "sidebar  heater      övrigt  hemma   ."
        "sidebar  footer      footer  footer  ."
      mediaquery:
        #phone
        "(max-width: 800px)":
          grid-gap: calc(var(--custom-layout-card-padding) * 1.7)
          grid-template-columns: 0 repeat(2, 1fr) 0
          grid-template-rows: 0 repeat(5, fit-content(100%)) 0fr
          grid-template-areas: |
            ".  .           .        ."
            ".  sidebar     sidebar  ."
            ".  lampor      sovrum   ."
            ".  ute         övrigt   ."
            ".  heater      hemma    ."
            ".  footer      footer   ."
            ".  .           .        ."
        #portrait
        "(max-width: 1200px)":
          grid-gap: var(--custom-layout-card-padding)
          grid-template-columns: repeat(3, 1fr) 0
          grid-template-rows: 0 repeat(3, fit-content(100%)) 0fr
          grid-template-areas: |
            "sidebar  .           .       ."
            "sidebar  lampor      sovrum  ."
            "sidebar  ute         övrigt  ."
            "sidebar  heater      hemma   ."
            "sidebar  footer      footer  ."
            "sidebar  .           .       ."
    cards:

      - type: custom:button-card #extra_styles fix
        styles: {card: [display: none]}

      #################################################
      #                                               #
      #                    SIDEBAR                    #
      #                                               #
      #################################################

      - type: vertical-stack
        view_layout:
          grid-area: sidebar
        cards:

          - type: custom:button-card
            entity: sensor.template_sidebar
            template: sidebar

          - type: conditional
            conditions:
              - entity: input_boolean.laundry_display
                state: 'on'
            card:
              type: custom:button-card
              entity: timer.laundry
              hold_action:
                action: call-service
                service: input_boolean.turn_off
                service_data:
                  entity_id: input_boolean.laundry_display
              template: laundry

      #################################################
      #                                               #
      #                  LAMPOR                       #
      #                                               #
      #################################################

      - type: grid
        title: Lampor
        view_layout:
          grid-area: lampor
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.vardagsrumsfonster
            name: Fönster
            template:
              - light
              - icon_hue

          - type: custom:button-card
            entity: light.renhorn
            name: Renhorn
            # hold_action:
            #   !include popup/vardagsrum_balkong.yaml
            template:
              - light
              - icon_shade

          - type: custom:button-card
            entity: light.fonsterlampa_kok
            name: Kök
            template:
              - light
              - icon_lamp

          - type: custom:button-card
            entity: light.fonsterlampa
            name: Tvättstuga
            template:
              - light
              - icon_lamp

#          - type: custom:button-card
#            entity: media_player.sony_bravia_tv
#            name: Tv
#            state_display: >
#              [[[
#                if (variables.state === 'playing') {
#                  return 'På';
#                }
#                if (variables.state === true) {
#                  return variables.translate_unknown;
#                }
#              ]]]
#            hold_action:
#              !include popup/vardagsrum_tv.yaml
#            template:
#              - base
#              - icon_tv
#              - loader

#          - type: custom:button-card
#            entity: switch.deltaco_sh_p01
#            name: Balkong
#            hold_action:
#              !include popup/vardagsrum_balkong.yaml
#            template:
#              - base
#              - icon_hue
#              - loader

      #################################################
      #                                               #
      #                    UTE                     #
      #                                               #
      #################################################

      - type: grid
        title: Ute
        view_layout:
          grid-area: ute
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.huvudentre
            name: Huvudentré
            template:
              - light
              - icon_closet

          - type: custom:button-card
            entity: light.groventre
            name: Groventré
            template:
              - light
              - icon_closet

          - type: custom:button-card
            entity: light.garageport_2
            name: Garageport
            template:
              - light
              - icon_hue

          # - type: custom:button-card
          #   entity: light.julslinga
          #   name: Uteslinga
          #   template:
          #     - light
          #     - icon_spot

 #         - type: custom:button-card
 #           entity: switch.computer_imac
 #           name: Dator
 #           hold_action:
 #             !include popup/studio_dator.yaml
 #           template:
 #             - base
 #             - icon_imac
 #             - loader
 #             - lock
 #           variables:
 #             lock: >
 #               [[[
 #                 let lock = states['lock.dator'];
 #                 return lock === undefined || lock.state;
 #               ]]]
 #             trigger: >
 #               [[[
 #                 let trigger = states['script.home_leave'];
 #                 return trigger === undefined || trigger;
 #               ]]]

          # - type: custom:button-card
          #   entity: switch.gosund_monitors_switch
          #   name: Monitorer
          #   hold_action:
          #     !include popup/studio_monitorer.yaml
          #   template:
          #     - base
          #     - icon_monitors
          #     - circle
          #     - loader
          #   variables:
          #     circle_input: >
          #       [[[
          #         let sensor = states['sensor.monitors_volume'];
          #         return sensor === undefined || sensor.state;
          #       ]]]

      #################################################
      #                                               #
      #                    SOVRUM                     #
      #                                               #
      #################################################

      - type: grid
        title: Sovrum
        view_layout:
          grid-area: sovrum
        columns: 2
        cards:

          - type: custom:button-card
            entity: light.sveas_fonster
            name: Sveas fönster
            template:
              - light
              - icon_shade

          - type: custom:button-card
            entity: light.bollar
            name: Sveas bollar
            template:
              - light
              - icon_shade

          - type: custom:button-card
            entity: light.vidars_fonster
            name: Vidars fönster
            template:
              - light
              - icon_shade
              

          # - type: custom:button-card
          #   entity: climate.ac
          #   name: Klimat
          #   hold_action:
          #     !include popup/sovrum_klimat.yaml
          #   template:
          #     - base
          #     - icon_climate
          #     - climate
          #   variables:
          #     circle_input: >
          #       [[[
          #         if (entity) {
          #           return entity.state === 'cool' ?
          #             entity.attributes.temperature :
          #             entity.attributes.current_temperature;
          #         }
          #       ]]]

          # - type: custom:button-card
          #   entity: switch.playstation_5
          #   name: Playstation
          #   hold_action:
          #     !include popup/vardagsrum_playstation.yaml
          #   template:
          #     - base
          #     - icon_ps5
          #     - loader

          # - type: custom:button-card
          #   entity: media_player.samsung_tv
          #   name: "Tv\u00B2"
          #   hold_action:
          #     !include popup/sovrum_tv2.yaml
          #   template:
          #     - base
          #     - icon_tv
          #     - loader

      #################################################
      #                                               #
      #                     HEATER                     #
      #                                               #
      #################################################

      - type: grid
        title: Motorvärmare
        view_layout:
          grid-area: heater
        columns: 2
        cards:

          - type: custom:button-card
            name: Auris
            icon: mdi:car-hatchback
            color: rgb(28, 128, 199)
            tap_action:
              !include popup/auris.yaml
            template:
              - icon_name

          - type: custom:button-card
            name: Yaris
            icon: mdi:car-side
            color: rgb(145, 28, 36)
            tap_action:
              !include popup/yaris.yaml
            template:
              - icon_name


          #     - type: horizontal-stack
          #       cards:

#                  - type: conditional
#                    conditions:
#                      - entity: select.conditional_media
#                        state_not: Vardagsrum

#                      - entity: select.conditional_media
#                        state_not: Sovrum

#                      - entity: select.conditional_media
#                        state_not: Spotify

#                      - entity: select.conditional_media
#                        state_not: Kök
#                    card:
#                      type: custom:button-card
#                      entity: sensor.plex_recently_added
#                      name: Senast tillagt
#                      tap_action:
#                        action: none
#                      template:
#                        - conditional_media
#                        - icon_plex

              #     - type: conditional
              #       conditions:
              #         - entity: select.conditional_media
              #           state: Vardagsrum
              #       card:
              #         type: custom:button-card
              #         entity: media_player.vardagsrum
              #         template:
              #           - conditional_media
              #           - icon_sonos

              #     - type: conditional
              #       conditions:
              #         - entity: select.conditional_media
              #           state: Sovrum
              #       card:
              #         type: custom:button-card
              #         entity: media_player.sovrum
              #         template:
              #           - conditional_media
              #           - icon_apple_tv

              #     - type: conditional
              #       conditions:
              #         - entity: select.conditional_media
              #           state: Spotify
              #       card:
              #         type: custom:button-card
              #         entity: media_player.spotify
              #         template:
              #           - conditional_media
              #           - icon_spotify

              #     - type: conditional
              #       conditions:
              #         - entity: select.conditional_media
              #           state: Kök
              #       card:
              #         type: custom:button-card
              #         entity: media_player.kok
              #         template:
              #           - conditional_media
              #           - icon_nest_mini

              # - type: grid
              #   columns: 2
              #   cards:

              #     - type: custom:button-card
              #       entity: media_player.vardagsrum
              #       name: Vardagsrum
              #       template:
              #         - media
              #         - icon_apple_tv

              #     - type: custom:button-card
              #       entity: media_player.sovrum
              #       name: Sovrum
              #       template:
              #         - media
              #         - icon_apple_tv

              #     - type: custom:button-card
              #       entity: media_player.spotify
              #       name: Spotify
              #       template:
              #         - media
              #         - icon_spotify

              #     - type: custom:button-card
              #       entity: media_player.kok
              #       name: Nest Mini
              #       template:
              #         - media
              #         - icon_nest_mini

      #################################################
      #                                               #
      #                    ÖVRIGT                     #
      #                                               #
      #################################################

      - type: grid
        title: Övrigt
        view_layout:
          grid-area: övrigt
        columns: 2
        cards:

          - type: custom:button-card
            entity: switch.single_switch_socket_1
            name: Hönslampa
            template:
              - light
              - icon_chickenhouse

          - type: custom:button-card
            entity: switch.torkskap
            name: Bevattningspump
            template:
              - light
              - icon_watercan
          

          - type: custom:button-card
            entity: light.floalt_panel
            name: LED Panel Garage
            template:
              - light
              - icon_lamp

          - type: custom:button-card
            entity: light.garderob_wiz
            name: Garderob
            color: rgb(28, 128, 199)
            template:
              - light
              - icon_window

          # - type: custom:button-card
          #   entity: switch.gosund_fan_switch
          #   name: "Fläkt\u00B2"
          #   hold_action:
          #     !include popup/studio_flakt.yaml
          #   template:
          #     - base
          #     - icon_fan2
          #     - loader

          # - type: custom:button-card
          #   entity: light.garderob
          #   name: Garderob
          #   template:
          #     - light
          #     - icon_closet

          # - type: custom:button-card
          #   entity: light.group_hall
          #   name: Hall
          #   template:
          #     - light
          #     - icon_spot

      #################################################
      #                                               #
      #                     HEMMA                     #
      #                                               #
      #################################################

      - type: grid
        title: Hemma
        view_layout:
          grid-area: hemma
        columns: 2
        cards:

          # - type: custom:button-card
          #   entity: person.markus
          #   name: Markus
          #   triggers_update:
          #     - sensor.markus_last_changed
          #   tap_action:
          #     !include popup/hemma_markus.yaml
          #   variables:
          #     retain: sensor.markus_last_changed
          #   template: person

          # - type: custom:button-card
          #   entity: person.linnea
          #   name: Linnea
          #   triggers_update:
          #     - sensor.linnea_last_changed
          #   tap_action:
          #     !include popup/hemma_linnea.yaml
          #   variables:
          #     retain: sensor.linnea_last_changed
          #   template: person

          - type: custom:button-card
            entity: climate.banedal_3
            name: Klimat
            hold_action:
              !include popup/sovrum_klimat.yaml
            template:
              - base
              - icon_climate
              - climate
            variables:
              circle_input: >
                [[[
                  if (entity) {
                    return entity.state === 'cool' ?
                      entity.attributes.temperature :
                      entity.attributes.current_temperature;
                  }
                ]]]

          # - type: custom:button-card
          #   entity: script.home_leave
          #   name: Stäng allt
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_away

          # - type: custom:button-card
          #   entity: script.home_arrive
          #   name: Hemma
          #   hold_action:
          #     action: none
          #   template:
          #     - base
          #     - icon_home

      #################################################
      #                                               #
      #                    FOOTER                     #
      #                                               #
      #################################################

      - type: horizontal-stack
        view_layout:
          grid-area: footer
        cards:
          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:home-thermometer"></ha-icon> Miljö
            tap_action:
              !include popup/footer/miljo.yaml
            # variables:
            #   notify: >
            #     [[[
            #       let status = states['sensor.nas_volume_1_status'],
            #         security = states['binary_sensor.nas_security_status'],
            #         disk_use = states['sensor.disk_use_percent'],
            #         nas_update = states['binary_sensor.nas_update_available'];
            #       if (status && security && disk_use && nas_update) {
            #         return nas_update.state === 'on'
            #           ? 1
            #           : status.state === 'background_scrubbing' ||
            #             security.state === 'on' ||
            #             parseFloat(disk_use.state) >= 85;
            #       }
            #     ]]]
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:home-lightning-bolt"></ha-icon> Energi
            tap_action:
              !include popup/footer/energy.yaml
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:seed"></ha-icon> Pollen
            tap_action:
              !include popup/footer/pollen.yaml
            template: footer

          - type: custom:button-card
            name: >
              <ha-icon icon="mdi:radiator"></ha-icon> Uppdatera
            tap_action:
              !include popup/footer/updater.yaml
            variables:
              notify: >
                [[[
                  let hass_installed = states['sensor.current_version'].state,
                    hacs = states['sensor.hacs'],
                    hass_version_latest = states['sensor.docker_hub'].state,
                    hass_count = hass_installed !== hass_version_latest ? 1 : 0;
                  return hass_count + parseInt(hacs.state);
                ]]]
            template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:robot-vacuum-variant"></ha-icon> Städa
          #   tap_action:
          #     !include popup/footer/vacuum.yaml
          #   variables:
          #     notify: >
          #       [[[
          #         let last_clean = states['sensor.morty_last_clean_end'],
          #           week_ms = 6048e5;
          #         if (last_clean) {
          #           return (Date.now() - Date.parse(last_clean.state)) > week_ms;
          #         }
          #       ]]]
          #   template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:chart-line-variant"></ha-icon> Historik
          # #  tap_action:
          # #    !include popup/footer/history.yaml
          #   template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:tablet"></ha-icon> Platta
          #   tap_action:
          #     !include popup/footer/tablet.yaml
          #   variables:
          #     notify: >
          #       [[[
          #         let plugged_in = states['binary_sensor.galaxy_tab_a_plugged_in'];
          #         if (plugged_in) {
          #           return plugged_in.state === 'off';
          #         }
          #       ]]]
          #   template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:router-wireless"></ha-icon> Router
          #   tap_action:
          #     !include popup/footer/router.yaml
          #   variables:
          #     notify: >
          #       [[[
          #         let internet = states['binary_sensor.template_udm_internet'],
          #           upgradable = states['binary_sensor.template_udm_upgradable'];
          #         if (internet && upgradable) {
          #           return upgradable.state === 'on'
          #             ? 1
          #             : internet.state === 'off';
          #         }
          #       ]]]
          #   template: footer

          # - type: custom:button-card
          #   name: >
          #     <ha-icon icon="mdi:raspberry-pi"></ha-icon> RPi
          #   tap_action:
          #     !include popup/footer/rpi.yaml
          #   variables:
          #     notify: >
          #       [[[
          #         let ping = states['binary_sensor.rpi_ping'];
          #         if (ping) {
          #           return ping.state === 'off';
          #         }
          #       ]]]
          #   template: footer
