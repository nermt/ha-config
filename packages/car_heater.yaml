automation:
  - id: 'car_heater1_on_timer'
    alias: 'Aktivera Auris motorvärmartimer'
    trigger:
    - entity_id: input_boolean.car_heater1_enable
      from: 'off'
      platform: state
      to: 'on'
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater1_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.sensor.netatmo_banedal_vardagsrum_utomhus_temperature.state }}'
    - event: car_heater1_timer_enabled

  - id: 'car_heater2_on_timer'
    alias: 'Aktivera Yaris motorvärmartimer'
    trigger:
    - entity_id: input_boolean.car_heater2_enable
      from: 'off'
      platform: state
      to: 'on'
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater2_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.sensor.netatmo_banedal_vardagsrum_utomhus_temperature.state }}'
    - event: car_heater2_timer_enabled

  - id: 'car_heater1_start_if_needed'
    alias: 'Starta Auris motorvärmare med en gång om nödvändigt'
    trigger:
    - platform: event
      event_type: car_heater1_timer_enabled
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.sensor.car1_time_until_departure.state|float > 0 }}'
        - condition: template
          value_template: '{{ (states.sensor.car_heater1_run_time.state|float * 60) >= states.sensor.car1_time_until_departure.state|float }}'
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_1

  - id: 'car_heater2_start_if_needed'
    alias: 'Starta Yaris motorvärmare med en gång om nödvändigt'
    trigger:
    - platform: event
      event_type: car_heater2_timer_enabled
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ states.sensor.car2_time_until_departure.state|float > 0 }}'
        - condition: template
          value_template: '{{ (states.sensor.car_heater2_run_time.state|float * 60) >= states.sensor.car2_time_until_departure.state|float }}'
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_2

  - id: 'car_heater1_calculated_time'
    alias: 'Starta Auris motorvärmare vid beräknad starttid'
    trace:
      stored_traces: 1000
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater1_start_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater1_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater1_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater1_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_1

  - id: 'car_heater2_calculated_time'
    alias: 'Starta Yaris motorvärmare vid beräknad starttid'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater2_start_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater2_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater2_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater2_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_on
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_2

  - id: 'car_heater1_departure'
    alias: 'Stoppa Auris motorvärmare vid tid för avfärd'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M:%S") == states.input_datetime.car_heater1_departure_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater1_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater1_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater1_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_off
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_1
    - service: input_boolean.turn_off
      entity_id: input_boolean.car_heater1_enable

  - id: 'car_heater2_departure'
    alias: 'Stoppa Yaris motorvärmare vid tid för avfärd'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M:%S") == states.input_datetime.car_heater2_departure_time.state }}'
        - condition: template
          value_template: '{{ states.sensor.car_heater2_run_time.state|float > 0 }}'
        - condition: state
          entity_id: input_boolean.car_heater2_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater2_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: switch.turn_off
      # CHANGE-ME: car heater power switch
      entity_id: switch.dubbla_motorvarmare_socket_2
    - service: input_boolean.turn_off
      entity_id: input_boolean.car_heater2_enable

  - id: 'car_heater1_temp_sample_3h'
    alias: 'Läs utetemperaturen 3h innan Auris avfärd'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater1_3h_before_start_time.state }}'
        - condition: state
          entity_id: input_boolean.car_heater1_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater1_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater1_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.sensor.netatmo_banedal_vardagsrum_utomhus_temperature.state }}'

  - id: 'car_heater2_temp_sample_3h'
    alias: 'Läs utetemperaturen 3h innan Yaris avfärd'
    trigger:
    - platform: time_pattern
      minutes: "/1"
      seconds: 00
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: '{{ now().time().strftime("%H:%M") == states.sensor.car_heater2_3h_before_start_time.state }}'
        - condition: state
          entity_id: input_boolean.car_heater2_enable
          state: 'on'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.car_heater2_weekday
              state: 'off'
            - condition: time
              weekday:
                - mon
                - tue
                - wed
                - thu
                - fri
    action:
    - service: input_number.set_value
      data_template:
        entity_id: input_number.car_heater2_3h_before_temp
        # CHANGE-ME: outside temperature sensor
        value: '{{ states.sensor.netatmo_banedal_vardagsrum_utomhus_temperature.state }}'

# Input sensors
input_datetime:
  car_heater1_departure_time:
    name: Auris motorvärmare tid för avfärd
    has_time: true
    has_date: false
  car_heater2_departure_time:
    name: Yaris motorvärmare tid för avfärd
    has_time: true
    has_date: false

input_number:
  car_heater1_3h_before_temp:
    name: Auris avläst utetemperatur
    unit_of_measurement: °C
    icon: mdi:thermometer
    min: -30
    max: 30
    step: 0.5
  car_heater2_3h_before_temp:
    name: Yaris avläst utetemperatur
    unit_of_measurement: °C
    icon: mdi:thermometer
    min: -30
    max: 30
    step: 0.5

# Boolean sensors
input_boolean:
  car_heater1_weekday:
    name: Endast veckodagar
    icon: mdi:calendar
  car_heater1_enable:
    name: Aktivera motorvärmarlogik
  car_heater2_weekday:
    name: Endast veckodagar
    icon: mdi:calendar
  car_heater2_enable:
    name: Aktivera motorvärmarlogik

sensor:
  - platform: template
    sensors:
      car_heater1_run_time:
        friendly_name: 'Beräknad tid att värma'
        unit_of_measurement: h
        value_template: >
          {% if ((states('input_number.car_heater1_3h_before_temp')|float) < 10) %}
            {% if not states('input_number.car_heater1_3h_before_temp') == 'unknown' %}
              {{(states('input_number.car_heater1_3h_before_temp')|float * (-0.05) + 1.25)|round(1)}}
            {%endif%}
          {%else%}
            0
          {%endif%}

  - platform: template
    sensors:
      car_heater1_start_time:
        friendly_name: 'Beräknad starttid'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater1_departure_time.state is defined %}
            {% if ((states('sensor.car_heater1_run_time')|float) > 0) %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater1_departure_time')) - (states('sensor.car_heater1_run_time')|float *3600))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
            {%else%}
              Aldrig
            {%endif%}
          {% else %}
              väntar på sensordata
          {% endif%}
  - platform: template
    sensors:
      car_heater1_3h_before_start_time:
        friendly_name: '3h innan Auris avfärd'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater1_departure_time.state is defined %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater1_departure_time')) - (10800))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater1_status:
        friendly_name: 'Auris motorvärmarstatus'
        icon_template: mdi:clock
        # CHANGE-ME: car heater power switch (note: two entrys in this block)
        value_template: >
          {% if is_state('input_boolean.car_heater1_enable', 'on') %}
            {% if is_state('switch.dubbla_motorvarmare_socket_1', 'on') %}
              Auris motorvärmare är nu på och stängs av {{ states.input_datetime.car_heater1_departure_time.attributes.timestamp  | timestamp_custom("%H:%M", false) }}
            {% else %}
              Auris motorvärmare inställd för avgång {{ states.input_datetime.car_heater1_departure_time.attributes.timestamp  | timestamp_custom("%H:%M", false) }}
            {% endif%}
          {% else %}
            {% if is_state('switch.dubbla_motorvarmare_socket_1', 'on') %}
              Auris motorvärmare är nu på och styrs manuellt!
            {% else %}
              Motorvärmare ej schemalagd för Auris
            {%endif %}

          {% endif%}
  - platform: template
    sensors:
      car1_time_until_departure:
        friendly_name: 'tid för avgång'
        icon_template: mdi:clock
        value_template: '{{ (as_timestamp(now().strftime("%Y-%m-%d ") + states.input_datetime.car_heater1_departure_time.state) - as_timestamp(now().strftime("%Y-%m-%d %H:%M"))) / 60 }}'

###########
## YARIS
###########
  - platform: template
    sensors:
      car_heater2_run_time:
        friendly_name: 'Beräknad tid att värma'
        unit_of_measurement: h
        value_template: >
          {% if ((states('input_number.car_heater2_3h_before_temp')|float) < 10) %}
            {% if not states('input_number.car_heater2_3h_before_temp') == 'unknown' %}
              {{(states('input_number.car_heater2_3h_before_temp')|float * (-0.05) + 1.25)|round(1)}}
            {%endif%}
          {%else%}
            0
          {%endif%}

  - platform: template
    sensors:
      car_heater2_start_time:
        friendly_name: 'Beräknad starttid'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater2_departure_time.state is defined %}
            {% if ((states('sensor.car_heater2_run_time')|float) > 0) %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater2_departure_time')) - (states('sensor.car_heater2_run_time')|float *3600))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
            {%else%}
              Aldrig
            {%endif%}
          {% else %}
              väntar på sensordata
          {% endif%}
  - platform: template
    sensors:
      car_heater2_3h_before_start_time:
        friendly_name: '3h innan Yaris avfärd'
        icon_template: mdi:clock
        value_template: >
          {% if states.input_datetime.car_heater2_departure_time.state is defined %}
              {{ strptime(((as_timestamp('1970-01-01 ' ~ states('input_datetime.car_heater2_departure_time')) - (10800))|timestamp_custom), '%Y-%m-%d %H:%M:%S').strftime("%H:%M") }}
          {% else %}
              waiting for sensors
          {% endif%}
  - platform: template
    sensors:
      car_heater2_status:
        friendly_name: 'Yaris motorvärmarstatus'
        icon_template: mdi:clock
        # CHANGE-ME: car heater power switch (note: two entrys in this block)
        value_template: >
          {% if is_state('input_boolean.car_heater2_enable', 'on') %}
            {% if is_state('switch.dubbla_motorvarmare_socket_2', 'on') %}
              Yaris motorvärmare är nu på och stängs av {{ states.input_datetime.car_heater2_departure_time.attributes.timestamp  | timestamp_custom("%H:%M", false) }}
            {% else %}
              Yaris motorvärmare inställd för avfärd {{ states.input_datetime.car_heater2_departure_time.attributes.timestamp  | timestamp_custom("%H:%M", false) }}
            {% endif%}
          {% else %}
            {% if is_state('switch.dubbla_motorvarmare_socket_2', 'on') %}
              Yaris motorvärmare är nu på och styrs manuellt!
            {% else %}
              Motorvärmare ej schemalagd för Yaris
            {%endif %}

          {% endif%}
  - platform: template
    sensors:
      car2_time_until_departure:
        friendly_name: 'tid för avgång'
        icon_template: mdi:clock
        value_template: '{{ (as_timestamp(now().strftime("%Y-%m-%d ") + states.input_datetime.car_heater2_departure_time.state) - as_timestamp(now().strftime("%Y-%m-%d %H:%M"))) / 60 }}'
